function [nnparam] = generate_simulink_nn_from_onnx_model(onnx_modelfile, save_file)

%% Input params
% https://www.mathworks.com/help/deeplearning/ref/importonnxnetwork.html
% https://www.mathworks.com/help/coder/ug/load-pretrained-networks-for-code-generation.html

% 1) generate onnx model from policy: 
% in policy compression: python convert_policy_from_python_to_matlab_onnx.py --input-policy /home/atagliab/iros22_cleanup/policy_compression/evals/octabee/hover_v0/tmp_dagger_sa_50/0/intermediate_policy_0.pt

% copy the onnx model to matlab

% set the model name and inputs size
%onnx_modelfile = "icra_multi_traj.onnx";
%input_size = 128;

input_size = 14;
output_size = 4;

%% Load net
net = importONNXNetwork(strcat(onnx_modelfile, '.onnx'), 'InputDataFormats', "BC", 'OutputDataFormats', "BC", 'targetNetwork', "dlnetwork", 'GenerateCustomLayers', 1);
% net = importONNXNetwork(strcat(onnx_modelfile, '.onnx'), 'OutputLayerType', 'regression');
lgraph = layerGraph(net);
lgraph = removeLayers(lgraph,'outputOutput');
%lgraph = importONNXLayers(strcat(onnx_modelfile, '.onnx'), ...
%    'OutputLayerType','regression', ...
%    'ImportWeights',true);
net = dlnetwork(lgraph);

%save(strcat(onnx_modelfile,'.mat'), "net");

%% Manually edit the generated function to take as input the params that we define below: 
nn_weights_typecast = 'single' % double
nnparam.b1 = cast(net.Layers(3).Bias, nn_weights_typecast);        % Bias etc are single... & then I cast to double
nnparam.IW1_1 = cast(net.Layers(3).Weights, nn_weights_typecast);

nnparam.b2 = cast(net.Layers(5).Bias, nn_weights_typecast);
nnparam.LW2_1 = cast(net.Layers(5).Weights, nn_weights_typecast);

nnparam.b3 = cast(net.Layers(7).Bias, nn_weights_typecast);
nnparam.LW3_2 = cast(net.Layers(7).Weights, nn_weights_typecast);

% verify prediction. Compare with output generated by torch model (based on
% torch model).
rtmpcnn(0.1*ones(input_size, 1), nnparam)
rtmpcnn(-0.1*ones(input_size, 1), nnparam)
rtmpcnn(0.0*ones(input_size, 1), nnparam)

if save_file
    nn_params_name = strcat(onnx_modelfile, '_nnparam.mat');
    save(nn_params_name, 'nnparam');
    fprintf("Please load: %s \n as input of rtmpcnn.m.\n", nn_params_name);
end

end
